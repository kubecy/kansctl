---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app: prometheus

spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus

  template:
    metadata:
      labels:
        app: prometheus
    
    spec:
      serviceAccountName: monitor-sa
      nodeSelector:
        monitoring: 'true'
      
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - prometheus
              topologyKey: "kubernetes.io/hostname"
      
      securityContext:
        runAsUser: 1000
        #runAsNonRoot: true
        fsGroup: 2000
      
      initContainers:
        - name: fix-data-permissions
          image: "registry.cn-guangzhou.aliyuncs.com/kubecy/monitoring:prometheus_v2.53.4"
          command: ["sh", "-c", "chown -R 1000:2000 /prometheus && chmod -R g+rwx /prometheus"]
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: prometheus-k8s-db
              mountPath: /prometheus
      
      containers:
        - name: prometheus
          resources:
            limits:
              memory: 4Gi
              cpu: 2
            requests:
              memory: 1Gi
              cpu: 500m
          
          readinessProbe:
            httpGet:
              path: /-/ready
              port: web
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 3
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          
          ports:
            - name: web
              containerPort: 9090
              protocol: TCP
          
          image: 'registry.cn-guangzhou.aliyuncs.com/kubecy/monitoring:prometheus_v2.53.4'
          imagePullPolicy: IfNotPresent
          
          args:
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--config.file=/etc/prometheus/config/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--storage.tsdb.retention.time=7d'
            - '--web.enable-lifecycle'
            - '--storage.tsdb.no-lockfile'
            - '--web.route-prefix=/'
          
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus/config
            - name: prometheus-k8s-db
              mountPath: /prometheus
              subPath: prometheus-db
            - name: prometheus-rulefiles
              mountPath: /etc/prometheus/rules/prometheus-rulefiles

        - name: config-reloader
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 100m
              memory: 50Mi
          
          command:
            - /bin/prometheus-config-reloader
          
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SHARD
              value: '0'
          
          ports:
            - name: reloader-web
              containerPort: 8080
              protocol: TCP
          
          image: 'registry.cn-guangzhou.aliyuncs.com/kubecy/monitoring:prometheus-config-reloader_v0.55.1'
          imagePullPolicy: IfNotPresent
          
          args:
            - '--reload-url=http://localhost:9090/-/reload'
            - '--config-file=/etc/prometheus/config/prometheus.yml'
            - '--watched-dir=/etc/prometheus/rules/prometheus-rulefiles'
            - "--watch-interval=3s"
          
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus/config
            - name: prometheus-rulefiles
              mountPath: /etc/prometheus/rules/prometheus-rulefiles

      volumes:
        - name: config
          configMap: 
            name: prometheus-config
        
        - name: prometheus-rulefiles
          configMap:
            name: prometheus-rulefiles
        
        - name: prometheus-k8s-db
          persistentVolumeClaim:
            claimName: prometheus-data-pvc
