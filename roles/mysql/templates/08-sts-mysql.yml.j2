---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: moone-mysql-prod
  namespace: moone
  labels:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: mysql
    app.kubernetes.io/kubecy: mysql
    app.kubernetes.io/component: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
      app.kubernetes.io/instance: mysql
      app.kubernetes.io/kubecy: mysql
      app.kubernetes.io/component: mysql     
  serviceName: mysql-svc-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql
        app.kubernetes.io/instance: mysql
        app.kubernetes.io/kubecy: mysql
        app.kubernetes.io/component: mysql
    spec:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001

      serviceAccountName: moone-mysql-sa
      automountServiceAccountToken: false
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mysql
                    app.kubernetes.io/instance: mysql
                topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/hostname: kubecy-worker26  ## 
      #securityContext:
      #  fsGroup: 1001
      terminationGracePeriodSeconds: 30
      initContainers:
        - name: preserve-logs-symlinks
          image: registry.cn-guangzhou.aliyuncs.com/kansctl/mysql:v8.0.36
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
          command:
            - /bin/bash
          args:
            - -ec
            - |
              #!/bin/bash
              if [ -d /opt/bitnami/mysql/logs ] && [ "$(ls -A /opt/bitnami/mysql/logs)" ]; then
                cp -r /opt/bitnami/mysql/logs /emptydir/app-logs-dir
              fi
          volumeMounts:
            - name: empty-dir
              mountPath: /emptydir
        - name: volume-permissions
          image: registry.cn-guangzhou.aliyuncs.com/kansctl/bitnami-shell:v11-debian-11-r118
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -ec
            - |
              mkdir -p "/bitnami/mysql"
              chown -R 1001:1001 "/bitnami/mysql"
          securityContext:
            runAsUser: 0
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          volumeMounts:
            - name: data
              mountPath: /bitnami/mysql
      containers:
        - name: mysql
          image: registry.cn-guangzhou.aliyuncs.com/kansctl/mysql:v8.0.36
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql  # 修正 Secret 名称
                  key: mysql-root-password
            - name: MYSQL_ENABLE_SSL
              value: "no"
            - name: MYSQL_USER
              value: "appuser"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql  # 修正 Secret 名称
                  key: mysql-password
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_DATABASE
              value: "appdb"
            - name: MYSQL_REPLICATION_MODE
              value: "master"
            - name: MYSQL_REPLICATION_USER
              value: "replicator"
            - name: MYSQL_REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql  # 修正 Secret 名称
                  key: mysql-replication-password
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  mysqladmin status -uroot -p"${MYSQL_ROOT_PASSWORD}"
            initialDelaySeconds: 60
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3

          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  mysqladmin ping -uroot -p"${MYSQL_ROOT_PASSWORD}" | grep "mysqld is alive"
            initialDelaySeconds: 60
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 1500m
              memory: 3Gi
            requests:
              cpu: 500m
              memory: 1Gi
          volumeMounts:
            - name: data
              mountPath: /bitnami/mysql
            - name: config
              mountPath: /opt/bitnami/mysql/conf/my.cnf
              subPath: my.cnf
            - name: tmpdir
              mountPath: /opt/bitnami/mysql/tmp
        - name: metrics
          image: registry.cn-guangzhou.aliyuncs.com/kansctl/mysqld-exporter:v0.17.2
          #image: registry.cn-guangzhou.aliyuncs.com/kansctl/mysqld-exporter:v0.14.0
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql  # 修正 Secret 名称
                  key: mysql-root-password
          command:
            - /bin/bash
            - -ec
            - |
              password_aux="${MYSQL_ROOT_PASSWORD:-}"
              if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
              fi
              MYSQLD_EXPORTER_PASSWORD=${password_aux} /bin/mysqld_exporter --mysqld.address=localhost:3306 --mysqld.username=root

          ports:
            - name: metrics
              containerPort: 9104
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: metrics
          readinessProbe:
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: metrics

          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: config
          configMap:
            name: moone-mysql-cm  # 修正 ConfigMap 名称
        - name: empty-dir
          emptyDir: {}
        - name: tmpdir
          emptyDir: {}

  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
        storageClassName: mysql-storage
