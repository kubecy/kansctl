---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-secondary
  namespace: default
  labels:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: mysql
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: mysql
    app.kubernetes.io/component: secondary
spec:
  replicas: 2
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
      app.kubernetes.io/instance: mysql
      app.kubernetes.io/part-of: mysql
      app.kubernetes.io/component: secondary
  serviceName: mysql-secondary-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: a1b2c3d4...  # 自动生成的配置校验和
        charts.bitnami.com/password-last-update: "20250718120000"
      labels:
        app.kubernetes.io/name: mysql
        app.kubernetes.io/instance: mysql
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: mysql
        app.kubernetes.io/component: secondary
    spec:
      serviceAccountName: mysql
      automountServiceAccountToken: false
      affinity:
        podAffinity: {}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mysql
                    app.kubernetes.io/instance: mysql
                    app.kubernetes.io/component: secondary
                topologyKey: kubernetes.io/hostname
        nodeAffinity: {}
      nodeSelector:
        workload: database
      tolerations:
        - key: "dedicated"
          operator: "Equal"
          value: "mysql"
          effect: "NoSchedule"
      priorityClassName: medium-priority
      securityContext:
        fsGroup: 1001
      terminationGracePeriodSeconds: 30
      initContainers:
        - name: preserve-logs-symlinks
          image: docker.io/bitnami/mysql:8.0.33
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          resources:
            limits:
              cpu: 300m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          command:
            - /bin/bash
          args:
            - -ec
            - |
              #!/bin/bash
              . /opt/bitnami/scripts/libfs.sh
              if ! is_dir_empty /opt/bitnami/mysql/logs; then
                cp -r /opt/bitnami/mysql/logs /emptydir/app-logs-dir
              fi
          volumeMounts:
            - name: empty-dir
              mountPath: /emptydir
        - name: volume-permissions
          image: docker.io/bitnami/bitnami-shell:11
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -ec
            - |
              mkdir -p "/bitnami/mysql"
              chown "1001:1001" "/bitnami/mysql"
              find "/bitnami/mysql" -mindepth 1 -maxdepth 1 -not -name ".snapshot" -not -name "lost+found" | xargs -r chown -R "1001:1001"
          securityContext:
            runAsUser: 0
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          volumeMounts:
            - name: data
              mountPath: /bitnami/mysql
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
      containers:
        - name: mysql
          image: docker.io/bitnami/mysql:8.0.33
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MYSQL_REPLICATION_MODE
              value: "slave"
            - name: MYSQL_MASTER_HOST
              value: "mysql-primary"
            - name: MYSQL_MASTER_PORT_NUMBER
              value: "3306"
            - name: MYSQL_MASTER_ROOT_USER
              value: "root"
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_REPLICATION_USER
              value: "replicator"
            - name: MYSQL_ENABLE_SSL
              value: "no"
            - name: MYSQL_MASTER_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: mysql-root-password
            - name: MYSQL_REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: mysql-replication-password
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_MASTER_ROOT_PASSWORD:-}"
                  mysqladmin status -uroot -p"${password_aux}"
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_MASTER_ROOT_PASSWORD:-}"
                  mysqladmin ping -uroot -p"${password_aux}" | grep "mysqld is alive"
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 1500m
              memory: 3Gi
            requests:
              cpu: 500m
              memory: 1Gi
          volumeMounts:
            - name: data
              mountPath: /bitnami/mysql
            - name: config
              mountPath: /opt/bitnami/mysql/conf/my.cnf
              subPath: my.cnf
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mysql/conf
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mysql/tmp
              subPath: app-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mysql/logs
              subPath: app-logs-dir
        - name: metrics
          image: docker.io/bitnami/mysqld-exporter:0.15.0
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: mysql-root-password
          command:
            - /bin/bash
            - -ec
            - |
              password_aux="${MYSQL_ROOT_PASSWORD:-}"
              MYSQLD_EXPORTER_PASSWORD=${password_aux} /bin/mysqld_exporter --mysqld.address=localhost:3306 --mysqld.username=root --web.listen-address=:9104
          ports:
            - name: metrics
              containerPort: 9104
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 300m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
      volumes:
        - name: config
          configMap:
            name: mysql-secondary-config
        - name: empty-dir
          emptyDir: {}
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
    whenScaled: Delete
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: mysql
          app.kubernetes.io/instance: mysql
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/component: secondary
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi
        storageClassName: ssd
        volumeMode: Filesystem
